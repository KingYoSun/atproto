apiVersion: apps/v1
kind: Deployment
metadata:
  name: atproto-postgres
  namespace: {{ .Values.namespace }}
  labels: {{- include "atproto.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "atproto.selectorLabels" . | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels: {{- include "atproto.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgres
          image: postgres:14-alpine
          env:
            - name: POSTGRES_USER
              value: {{ .Values.db_user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.db_pass }}
            - name: POSTGRES_DB
              value: {{ .Values.db_name }}
          ports:
            - containerPort: 5432
          args: ['-c', 'log_statement=ddl', '-c', 'log_destination=stderr']
          volumeMounts:
            - name: atproto-postgresql-pvc
              mountPath: /var/lib/postgresql/data
      initContainers:
        - name: init-postgres
          image: postgres:14-alpine
          command:
            [
              'sh',
              '-c',
              'if [ -f /var/lib/postgresql/data/postmaster.pid ]; then pg_ctl stop -m fast -D "/var/lib/postgresql/data"; else pg_resetwal /var/lib/postgresql/data; fi',
            ]
          securityContext:
            runAsUser: 1000
            fsGroup: 1000
          volumeMounts:
            - name: atproto-postgresql-pvc
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: atproto-postgresql-pvc
          persistentVolumeClaim:
            claimName: atproto-postgresql
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "atproto.fullname" . }}-postgres
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  ports:
    - port: 5432
      protocol: TCP
  selector:
    {{- include "atproto.selectorLabels" . | nindent 4 }}
